// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url=env("DATABASE_URL")
 // "prisma://accelerate.prisma-data.net/?api_key=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhcGlfa2V5IjoiMGFkZjE2OTAtZGY0MC00OTM5LThjODEtYTJiZjIxNTUxODhiIiwidGVuYW50X2lkIjoiNTIwNmQwZmM3OGI4YWU1MjdiYzlmNzcwZTVhYjkzMzA1OTFjMzRiYTZmMjg2ZDc5NjNmZWQxMzZkMzFkZTFiMiIsImludGVybmFsX3NlY3JldCI6ImI2NTIwNjRiLTdiMTctNDNmYS05ZGM3LWRmYjQ4NTg2Njg4ZSJ9.FMhdaJVI-hg8MAtD9KZBn6_wjpP6o-j42K7EcaijKNg"
}

model User {
  id  Int    @id @default(autoincrement())
  name    String?
  username String @unique
  password String
  blogs    Blog[]
}

model Blog {
  id  Int    @id @default(autoincrement())
  authorId   Int
  content    String
  title       String
  published Boolean  @default(false)
  author    User @relation(fields: [authorId], references: [id])
}